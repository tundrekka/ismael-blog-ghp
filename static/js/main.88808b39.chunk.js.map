{"version":3,"sources":["components/ui/Button.tsx","context/PostContext.tsx","types/types.ts","theme/grid.ts","components/utils/Spinner.tsx","context/LoadPostsContext.tsx","theme/GlobalStyle.ts","theme/theme.ts","theme/img/moon.svg","theme/img/sun.svg","components/ui/Navbar.tsx","components/ui/FooterNav.tsx","hooks/useHideFooter.ts","hooks/useIntersectionObserver.ts","components/utils/LazyLoad.tsx","components/utils/SuspenseFallback.tsx","components/utils/ErrorBoundary.tsx","router/AppRouter.tsx","BlogApp.tsx","index.tsx"],"names":["Button","styled","button","theme","palette","dark","PostContext","createContext","E_URLParams","DbRoot","sizes","smaller","phone","tablet","laptop","desktop","giant","veryGiant","dinamycGrid","css","props","GridContainer","div","mt","GridCol","Object","keys","length","rotate","keyframes","StyledSpinner","Spinner","className","LoadPostsContext","GlobalStyle","createGlobalStyle","themeMode","body_bg","primary_text","darkMode","secondary_text","secondary_text_dark","navbar_bg","lightMode","posts_card_title","card_bg","text_white","text_gray","text_gray_dark","text_black","border_radius","StyledNavbar","nav","NavContainer","StyledButton","Navbar","memo","setThemeMode","id","to","type","onClick","src","moon","alt","style","width","height","sun","StyledFooter","FooterNav","show","useState","setShow","lastScroll","useRef","hideOnScroll","useCallback","currentScroll","window","pageYOffset","current","useEffect","addEventListener","removeEventListener","useHideFooter","useIntersectionObserver","elementRef","threshold","root","rootMargin","freezeOnceVisible","entry","setEntry","frozen","isIntersecting","updateEntry","node","IntersectionObserver","observer","observe","disconnect","LazyLoad","children","ref","isVisible","Fallback","scrollTo","minHeight","position","display","alignItems","ErrorBoundary","state","error","errorInfo","this","setState","location","reload","React","Component","Footer","lazy","HomeScreen","AdminRoute","PostScreen","AppRouter","posts","setPosts","noMorePosts","setNoMorePosts","Provider","value","fallback","exact","path","component","postId","innerWidth","BlogApp","localStorage","getItem","setItem","mode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88808b39.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\n\r\nexport const Button = styled.button`\r\n   cursor: pointer;\r\n   padding: .75em 1.1em;\r\n   user-select: none;\r\n   background-color: ${({theme}) => (theme.palette.dark) ? '#E4E6EB': 'rgb(24, 25, 26)'};\r\n   color: ${({theme}) => (theme.palette.dark) ? 'rgb(24, 25, 26)': '#E4E6EB'};\r\n   border: none;\r\n   border-radius: 4px;\r\n   font-weight: 700;\r\n   box-shadow: 1px 1px 3px gray;\r\n`","import { createContext } from \"react\";\r\nimport { IPostCard } from \"types/types\";\r\n\r\ninterface IContext {\r\n   posts: IPostCard[];\r\n   setPosts: React.Dispatch<React.SetStateAction<IPostCard[]>>;\r\n}\r\n\r\nexport const PostContext = createContext<IContext>({} as IContext);\r\n   \r\n","// interfaces\r\nexport interface IPostCardWihoutId {\r\n   title: string;\r\n   date: string;\r\n   content: string;\r\n   excerpt: string;\r\n   imageUrl?: string;\r\n}\r\n\r\nexport type IPostCard = IPostCardWihoutId & {id: string, featured?: 'true' | 'false'};\r\n\r\nexport interface IURLparams {\r\n   postId: E_URLParams.postId\r\n}\r\n\r\n// enums\r\nexport enum E_URLParams {\r\n   postId = \"postId\"\r\n}\r\n\r\nexport enum DbRoot {\r\n   dbRoot = 'posts'\r\n}\r\n","import styled, { css } from 'styled-components';\r\n\r\n// types\r\ntype Cols = \r\n   | 1 | 2 | 3 \r\n   | 4 | 5 | 6 \r\n   | 7 | 8 | 9 \r\n   | 10 | 11 | 12 \r\n\r\n// interfaces\r\ninterface ISizesProps {\r\n   phone?: Cols;\r\n   tablet?: Cols;\r\n}\r\n\r\nexport const sizes = {\r\n   // aliases\r\n   smaller: 500, // Just for phones < 500px\r\n   phone: 501,\r\n   tablet: 768,\r\n   laptop: 1000,\r\n   desktop: 1270,\r\n   giant: 1500,\r\n   veryGiant: 2000,\r\n}\r\n\r\nexport const dinamycGrid = css<ISizesProps>`\r\n\r\n   flex: 0 0 100%;\r\n   max-width: 100%;\r\n\r\n   ${(props) => {\r\n      if( props.phone ) {\r\n         return css`\r\n            flex: 0 0 ${(props.phone / 12 ) * 100}%;\r\n            max-width: ${(props.phone / 12 ) * 100}%;\r\n         `\r\n      }\r\n   }}\r\n   ${(props) => {\r\n      if( props.tablet ) {\r\n         return css`\r\n            @media (min-width: ${sizes.tablet}px) {\r\n               flex: 0 0 ${(props.tablet / 12 ) * 100}%;\r\n               max-width: ${(props.tablet / 12 ) * 100}%;\r\n            }\r\n         `\r\n      }\r\n   }}\r\n`\r\ninterface IGridContainerProps {\r\n   mt?: string;\r\n}\r\nexport const GridContainer = styled.div<IGridContainerProps>`\r\n   display: flex;\r\n   flex-wrap: wrap;\r\n   width: 100%;\r\n   margin-top: ${props => props.mt};\r\n`\r\n\r\nexport const GridCol = styled.div<ISizesProps>`\r\n   ${props => {\r\n\r\n      if( Object.keys(props).length < 3 ) {\r\n         return\r\n      }\r\n      return () => dinamycGrid      \r\n   }}\r\n`\r\n\r\n\r\n","import styled, { keyframes } from 'styled-components'\r\n\r\nconst rotate = keyframes`\r\n   from {\r\n      transform: translateX(-50%) rotate(0deg) ;\r\n   } \r\n \r\n   to {\r\n     transform: translateX(-50%) rotate(360deg) ;\r\n   }\r\n`\r\n\r\nconst StyledSpinner = styled.div`\r\n   border: 4px solid rgba(0, 0, 0, 0.1);\r\n   width: 1.2em;\r\n   height: 1.2em;\r\n   border-radius: 50%;\r\n   border-left-color: #7a78b4;\r\n   position: absolute;\r\n   left: 50%;\r\n   transform: translateX(-50%);\r\n\r\n   animation: ${rotate} 1s ease-in-out infinite;\r\n`\r\n\r\n// * those styles are inline (public/index.html)\r\n\r\nexport const Spinner = () => <StyledSpinner className=\"spinner\"></StyledSpinner>\r\n","import { createContext } from \"react\";\r\n\r\ninterface IContext {\r\n   noMorePosts: boolean;\r\n   setNoMorePosts: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport const LoadPostsContext = createContext<IContext>({} as IContext);","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n   * {\r\n      margin: 0;\r\n   }\r\n   html {\r\n      @media (min-width: 992px) {\r\n         font-size: 1.2rem;\r\n      }\r\n   }\r\n   body {\r\n      background-color: ${({ theme }) => theme.palette.themeMode.body_bg};\r\n      color: ${({ theme }) => theme.palette.themeMode.primary_text};\r\n      margin: 0;\r\n      padding: 0;\r\n      position: relative;\r\n   }\r\n\r\n   a {\r\n      text-decoration: none;\r\n      color: inherit\r\n   }\r\n\r\n   h1,h2,h3,h4,h5,h6 {\r\n      color: ${({ theme }) => theme.palette.themeMode.primary_text}\r\n   }\r\n   \r\n   #root {\r\n      max-width: 1300px;\r\n      margin: 0 auto;\r\n   }\r\n   \r\n   // scrollbar styles\r\n   ::-webkit-scrollbar {\r\n      -webkit-appearance: none;\r\n   }\r\n\r\n   ::-webkit-scrollbar:vertical {\r\n      width: 12px;\r\n   }\r\n\r\n   ::-webkit-scrollbar-button:increment,::-webkit-scrollbar-button {\r\n      display: none;\r\n   } \r\n\r\n   ::-webkit-scrollbar-thumb {\r\n      background-color: #5f7d8f;\r\n      border-radius: 5px;\r\n   }\r\n\r\n   ::-webkit-scrollbar-track {\r\n      background: #090112;  \r\n   }\r\n`\r\n","import { DefaultTheme } from \"styled-components\";\r\nimport { IThemeMode } from '../styled'\r\n\r\nconst darkMode: IThemeMode = {\r\n   primary_text: '#E4E6EB',\r\n   secondary_text: '#d3d4d6',\r\n   secondary_text_dark: '#B0B3B8',\r\n   body_bg: 'rgb(24, 25, 26)',\r\n   navbar_bg: 'rgba(36, 37, 38, .5)',\r\n}\r\n\r\nconst lightMode: IThemeMode = {\r\n   primary_text: 'rgb(24, 25, 26)',\r\n   secondary_text: '#242526',\r\n   secondary_text_dark: 'rgba(36, 37, 38, .5)',\r\n   body_bg: '#E4E6EB',\r\n   navbar_bg: 'rgba(211, 212, 214, 0.7)',\r\n}\r\n\r\n const theme: DefaultTheme = {\r\n   palette: {\r\n      posts_card_title: '#E4E6EB',\r\n      card_bg: '#242526',\r\n\r\n      text_white: '#E4E6EB',\r\n      text_gray: '#d3d4d6',\r\n      text_gray_dark: '#B0B3B8',\r\n      text_black: 'black',\r\n\r\n      dark: true,\r\n\r\n      themeMode: darkMode\r\n   },\r\n   border_radius: '6px'\r\n}\r\n\r\nexport const getTheme = (mode?: string): DefaultTheme => {\r\n   return {\r\n      ...theme,\r\n      palette: {\r\n         ...theme.palette,\r\n         themeMode: (mode === 'light') ? lightMode :  darkMode,\r\n         dark: (mode === 'light') ? false : true,\r\n      },\r\n   }\r\n}","export default __webpack_public_path__ + \"static/media/moon.183165c8.svg\";","export default __webpack_public_path__ + \"static/media/sun.4aa32b5e.svg\";","import { memo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Button } from './Button'\r\nimport moon from 'theme/img/moon.svg'\r\nimport sun from 'theme/img/sun.svg'\r\n\r\nconst StyledNavbar = styled.nav`\r\n   background-color: transparent;\r\n`\r\nconst NavContainer = styled.div`\r\n   display: flex;\r\n   justify-content: space-between;\r\n   align-items: center;\r\n   padding: .5em 0;\r\n   background-color: ${({ theme }) => theme.palette.themeMode.navbar_bg};\r\n   color: ${({ theme }) => theme.palette.themeMode.primary_text};\r\n   position: absolute;\r\n   width: 100%;\r\n   top: 0;\r\n   left: 0;\r\n   z-index: 10;\r\n   box-shadow: 0 0 3px black;   \r\n\r\n   & > div {\r\n      margin: 0 0.9em;\r\n   }\r\n\r\n   .brand-logo {\r\n      margin-left: .5em;\r\n   }\r\n\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n   font-size: .7rem;\r\n   text-transform: uppercase;\r\n`\r\n\r\ninterface IProps {\r\n   setThemeMode: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport const Navbar: React.FC<IProps> = memo(({ setThemeMode }) => {\r\n\r\n   return (\r\n      <StyledNavbar id=\"navbar-id\">\r\n         <NavContainer>\r\n            <div className=\"brand\">\r\n               <Link to=\"/\">\r\n                  <StyledButton>Ismael Blog</StyledButton>\r\n               </Link>\r\n            </div>\r\n            <div>\r\n               <Button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                     setThemeMode( (themeMode) => (themeMode === 'dark') ? themeMode = 'light' : 'dark' )\r\n                  }}\r\n               >\r\n                  <span>\r\n                    <img src={ moon } alt=\"moon\" style={{width: '1.2em', height: '1.2em'}} />\r\n                  </span>\r\n                  <span>\r\n                    <img src={ sun } alt=\"sun\" style={{width: '1.2em', height: '1.2em'}} />\r\n                  </span>\r\n               </Button>\r\n               <span className=\"brand-logo\"></span>\r\n            </div>\r\n         </NavContainer>\r\n      </StyledNavbar>\r\n   )\r\n})\r\n","import { useHideFooter } from 'hooks/useHideFooter'\r\nimport { memo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Button } from './Button'\r\n\r\nconst StyledFooter = styled.div`\r\n   background-color: ${({ theme }) => theme.palette.themeMode.navbar_bg};\r\n   color: ${({ theme }) => theme.palette.themeMode.primary_text};\r\n   position: fixed;\r\n   bottom: 0;\r\n   left: 0;\r\n   padding: .5em 0;\r\n   width: 100%;\r\n   transition: all 300ms ease;\r\n   color: black;\r\n\r\n   display: flex;\r\n   justify-content: center;\r\n\r\n   &.hide {\r\n      transform: translate3d(0, 100%, 0);\r\n   }\r\n`\r\nexport const FooterNav: React.FC = memo(() => {\r\n\r\n   const show = useHideFooter()\r\n\r\n   return (\r\n      <StyledFooter className={` ${show ? '' : 'hide'}`}>\r\n         <div>\r\n            <Link to=\"/\">\r\n               <Button>HOME</Button>\r\n            </Link>\r\n         </div>\r\n      </StyledFooter>\r\n   )\r\n})\r\n","import { useState, useRef, useEffect, useCallback } from 'react'\r\n\r\nexport const useHideFooter = () => {\r\n   const [show, setShow] = useState(false)\r\n   const lastScroll = useRef(0)\r\n\r\n   const hideOnScroll = useCallback(() => {\r\n      const currentScroll = window.pageYOffset\r\n\r\n      if (currentScroll === 0) {\r\n         setShow(false)\r\n         lastScroll.current = currentScroll\r\n         return\r\n      }\r\n\r\n      if (currentScroll > lastScroll.current) {\r\n         // down\r\n         setShow(false)\r\n      } else if (currentScroll < lastScroll.current) {\r\n         // up\r\n         setShow(true)\r\n      }\r\n\r\n      lastScroll.current = currentScroll\r\n      \r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      window.addEventListener('scroll', hideOnScroll)\r\n\r\n      return () => {\r\n         window.removeEventListener('scroll', hideOnScroll)\r\n      }\r\n   }, [hideOnScroll])\r\n\r\n   return show\r\n}\r\n","import { RefObject, useEffect, useState } from 'react'\r\n\r\ninterface Args extends IntersectionObserverInit {\r\n  freezeOnceVisible?: boolean\r\n}\r\n\r\nfunction useIntersectionObserver(\r\n  elementRef: RefObject<Element>,\r\n  {\r\n    threshold = 0,\r\n    root = null,\r\n    rootMargin = '0%',\r\n    freezeOnceVisible = false,\r\n  }: Args,\r\n): IntersectionObserverEntry | undefined {\r\n  const [entry, setEntry] = useState<IntersectionObserverEntry>()\r\n\r\n  const frozen = entry?.isIntersecting && freezeOnceVisible\r\n\r\n  const updateEntry = ([entry]: IntersectionObserverEntry[]): void => {\r\n    setEntry(entry)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const node = elementRef?.current // DOM Ref\r\n    const hasIOSupport = !!window.IntersectionObserver\r\n\r\n    if (!hasIOSupport || frozen || !node) return\r\n\r\n    const observerParams = { threshold, root, rootMargin }\r\n    const observer = new IntersectionObserver(updateEntry, observerParams)\r\n\r\n    observer.observe(node)\r\n\r\n    return () => observer.disconnect()\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [elementRef, threshold, root, rootMargin, frozen])\r\n\r\n  return entry\r\n}\r\n\r\nexport default useIntersectionObserver","import { FC, useRef } from 'react'\r\n\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport { memo } from 'react'\r\n\r\nexport const LazyLoad: FC = memo(({ children }) => {\r\n   const ref = useRef<HTMLDivElement | null>(null)\r\n   const entry = useIntersectionObserver(ref, {\r\n      freezeOnceVisible: true,\r\n      rootMargin: '10px',\r\n   })\r\n   const isVisible = !!entry?.isIntersecting\r\n\r\n   return (\r\n      <div ref={ref}>\r\n         <div>{isVisible && <>{children}</>}</div>\r\n      </div>\r\n   )\r\n})\r\n","import { useEffect } from 'react'\r\nimport { Spinner } from './Spinner'\r\n\r\nexport const Fallback: React.FC = () => {\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n   }, [])\r\n\r\n   return (\r\n      <div\r\n         style={{\r\n            minHeight: '110vh',\r\n            position: 'relative',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n         }}\r\n      >\r\n         <Spinner />\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react'\r\n\r\ntype MyProps = {}\r\ntype MyState = {\r\n   error: any\r\n   errorInfo: any\r\n}\r\n\r\nexport class ErrorBoundary extends React.Component<MyProps, MyState> {\r\n   // constructor(props) {\r\n   //   super(props);\r\n   //   this.state = { error: null, errorInfo: null };\r\n   // }\r\n   state: MyState = {\r\n      error: null,\r\n      errorInfo: null\r\n   }\r\n\r\n   componentDidCatch(error: any, errorInfo: any) {\r\n      // Catch errors in any components below and re-render with error message\r\n      this.setState({\r\n         error: error,\r\n         errorInfo: errorInfo,\r\n      })\r\n      // You can also log error messages to an error reporting service here\r\n   }\r\n\r\n   render() {\r\n      if (this.state.errorInfo) {\r\n         return (\r\n            <div>\r\n               <h2>Something went wrong.</h2>\r\n               <button\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => {\r\n                     window.location.reload()\r\n                  }}\r\n               >\r\n                  Try Reloading\r\n               </button>\r\n            </div>\r\n         )\r\n      }\r\n      return this.props.children\r\n   }\r\n}\r\n","import React, { Suspense, useState } from 'react'\r\nimport {\r\n   HashRouter as Router,\r\n   Switch,\r\n   Route,\r\n   Redirect,\r\n} from 'react-router-dom'\r\n\r\nimport { Navbar } from 'components/ui/Navbar'\r\nimport { PostContext } from 'context/PostContext'\r\nimport { E_URLParams, IPostCard } from 'types/types'\r\nimport { FooterNav } from 'components/ui/FooterNav'\r\nimport { sizes } from 'theme/grid'\r\n\r\nimport { LazyLoad } from 'components/utils/LazyLoad'\r\nimport { Fallback } from 'components/utils/SuspenseFallback'\r\nimport { LoadPostsContext } from 'context/LoadPostsContext'\r\nimport { ErrorBoundary } from 'components/utils/ErrorBoundary'\r\n\r\nconst Footer = React.lazy(() => {\r\n   return import('components/ui/Footer')\r\n})\r\n\r\n// screens\r\nconst HomeScreen = React.lazy(() => {\r\n   return import('screens/HomeScreen')\r\n})\r\nconst AdminRoute = React.lazy(() => {\r\n   return import('./AdminRoute')\r\n})\r\nconst PostScreen = React.lazy(() => {\r\n   return import('screens/PostScreen')\r\n})\r\n\r\n\r\n\r\n\r\ninterface IProps {\r\n   setThemeMode: React.Dispatch<React.SetStateAction<string>>\r\n}\r\n\r\nexport const AppRouter: React.FC<IProps> = ({setThemeMode}) => {\r\n\r\n   // state to the postContextProvider\r\n   const [posts, setPosts] = useState<IPostCard[]>([])\r\n\r\n   // state to LoadPostContextProvider\r\n   const [noMorePosts, setNoMorePosts] = useState(false)\r\n\r\n\r\n   return (\r\n      <Router>\r\n         <Navbar setThemeMode={setThemeMode} />\r\n         <PostContext.Provider\r\n            value={{\r\n               posts,\r\n               setPosts,\r\n            }}\r\n         >\r\n            <LoadPostsContext.Provider value={{\r\n               noMorePosts,\r\n               setNoMorePosts\r\n            }}>\r\n               <ErrorBoundary >\r\n                  <Suspense fallback={<Fallback />}>\r\n                     <Switch>\r\n                        <Route exact path=\"/\" component={HomeScreen} />\r\n                        <Route\r\n                           exact\r\n                           path={`/post/:${E_URLParams.postId}`}\r\n                           component={PostScreen}\r\n                        />\r\n                        <Route path=\"/admin\" component={AdminRoute} />\r\n                        <Redirect to=\"/\" />\r\n                     </Switch>\r\n                  </Suspense>\r\n               </ErrorBoundary>\r\n            </LoadPostsContext.Provider>\r\n         </PostContext.Provider>\r\n\r\n         {\r\n            window.innerWidth > sizes.laptop\r\n            ? null\r\n            : <FooterNav />\r\n         }\r\n         <div id=\"footerHeightLazyLoad\" style={{height: '1.5rem'}}></div>\r\n         <ErrorBoundary>\r\n            <Suspense fallback={null}>\r\n               <LazyLoad>\r\n                  <Footer />\r\n               </LazyLoad>\r\n            </Suspense>\r\n         </ErrorBoundary>\r\n         \r\n      </Router>\r\n   )\r\n}\r\n","import { ThemeProvider } from 'styled-components'\r\n\r\nimport { GlobalStyle } from 'theme/GlobalStyle'\r\nimport { getTheme } from 'theme/theme'\r\nimport { AppRouter } from 'router/AppRouter'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nexport const BlogApp: React.FC = () => {\r\n   const [themeMode, setThemeMode] = useState<string>('dark')\r\n\r\n   useEffect(() => {\r\n      if (localStorage.getItem('themeMode')) {\r\n         const theme = localStorage.getItem('themeMode') || 'dark'\r\n         setThemeMode( theme )\r\n      }\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      localStorage.setItem('themeMode', themeMode)\r\n   }, [themeMode])\r\n\r\n   return (\r\n      <ThemeProvider theme={() => getTheme(themeMode)}>\r\n         <GlobalStyle />\r\n         <AppRouter setThemeMode={setThemeMode} />\r\n      </ThemeProvider>\r\n   )\r\n}\r\n","import { BlogApp } from 'BlogApp';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BlogApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}